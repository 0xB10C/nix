name: "Check for package updates"
on:
  workflow_dispatch:
  schedule:
    - cron: "26 6 * * *" # https://crontab.guru/#26_10_*_*_*
     
jobs:
  update-flake-packages:
    strategy:
      fail-fast: false
      matrix:
        nixPath:
          - nixpkgs=channel:nixos-24.11
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: "${{ matrix.nixPath }}"
          extra_nix_config: |
            experimental-features = nix-command flakes
    
      - uses: DeterminateSystems/magic-nix-cache-action@main
    
      - name: Show nixpkgs version
        run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'

      - name: configure git bot
        run: |
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
  
      - name: Run nix-update on each package, push to a branch, and open a PR if it doesn't yet exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            pkgs=($(nix flake show --json | jq -r '.packages."x86_64-linux" | keys[] ' | grep -v bitcoind-tracing))          
            for i in "${pkgs[@]}"
            do
              echo "trying to update package: '$i'"
              git checkout master
              CURRENT_HEAD=$(git log -1 --format=%H)
              # HACK: "... || true" to avoid failing when no update is avaliable
              nix-shell -p nix-update --run "nix-update --flake --commit --build --version=branch $i || true"
              NEW_HEAD=$(git log -1 --format=%H)

              if [ "$CURRENT_HEAD" = "$NEW_HEAD" ]; then
                echo "Package $i wasn't updated - doing nothing."
                git restore pkgs/
                continue
              else
                git log -1
              fi

              BRANCH="auto-update-$i"
              git push -f origin ${{ github.ref_name }}:$BRANCH
              
              # Only open a PR if the branch is not attached to an existing one
              PR=$(gh pr list --head $BRANCH --json number -q '.[0].number')
              if [ -z $PR ]; then
                PR_TITLE="Automated package update of $i ($(date -Idate))" 
                gh pr create --head $BRANCH --title="$PR_TITLE" --body="Auto updating package '$i'. See commit(s) for details." --reviewer 0xb10c
              else
                echo "Pull request already exists, won't create a new one."
              fi

            done
